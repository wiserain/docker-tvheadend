name: buildx

on:
  watch:
    types: [started]
  push:
    branches:
      - 'master'
  pull_request:
  schedule:
    - cron: "0 21 * * 5"

env:
  DOCKERHUB_USER: wiserain
  IMAGE_NAME: wiserain/tvheadend

jobs:
  build-tvhbase:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    strategy:
      matrix:
        branch: [latest, stable, ubuntu]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ matrix.branch }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to docker.io
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Login to ghcr.io
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      -
        name: Build and push
        if: matrix.branch != 'ubuntu'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/tvhbase:${{ matrix.branch }}
            ghcr.io/${{ env.DOCKERHUB_USER }}/tvhbase:${{ matrix.branch }}
      -
        name: Build and push (ubuntu)
        if: matrix.branch == 'ubuntu'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/tvhbase:${{ matrix.branch }}
            ghcr.io/${{ env.DOCKERHUB_USER }}/tvhbase:${{ matrix.branch }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.DOCKERHUB_USER }}/tvhbase:${{ matrix.branch }}
            ghcr.io/${{ env.DOCKERHUB_USER }}/tvhbase:${{ matrix.branch }}

  build-tvheadend:
    needs:
      - build-tvhbase
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    strategy:
      matrix:
        branch: [latest, stable, ubuntu]
    env:
      IMAGE_FROM: ghcr.io/wiserain/tvhbase:${{ matrix.branch }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to docker.io
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Login to ghcr.io
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - 
        name: Load Variables
        id: vars
        run: |
          CID=$(docker run -d $IMAGE_FROM)
          BUILD=$(docker exec $CID tvheadend -v | awk -F'[_ ]' '{print $NF}' | awk -F'[_~]' '{print $1}')
          docker rm -f $CID
          echo ::set-output name=tvh_build::${BUILD}
      -
        name: Build and push
        if: matrix.branch != 'ubuntu'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.branch }}
            ${{ env.IMAGE_NAME }}:${{ matrix.branch }}-${{ steps.vars.outputs.tvh_build }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.branch }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.branch }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Build and push (ubuntu)
        if: matrix.branch == 'ubuntu'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.ubuntu
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.branch }}
            ${{ env.IMAGE_NAME }}:${{ matrix.branch }}-${{ steps.vars.outputs.tvh_build }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.branch }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.branch }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:${{ matrix.branch }}
            ${{ env.IMAGE_NAME }}:${{ matrix.branch }}-${{ steps.vars.outputs.tvh_build }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.branch }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.branch }}-${{ steps.vars.outputs.tvh_build }}

  pushrm:
    needs:
      - build-tvheadend
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=github_desc::$(curl -sX GET https://api.github.com/repos/${GITHUB_REPOSITORY} | jq -r .description)
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      - 
        name: Update Dockerhub description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
          repository: ${{ env.IMAGE_NAME }}
          short-description: ${{ steps.vars.outputs.github_desc }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
