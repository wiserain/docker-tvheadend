name: docker-buildx

on:
  watch:
    types: [started]
  push:
    branches:
      - 'master'
  pull_request:
  schedule:
    - cron: "0 21 * * 5"

env:
  DOCKERHUB_USER: wiserain
  DOCKERHUB_REPO: tvheadend

jobs:
  build-tvhbase-latest:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'latest'
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/tvhbase:latest
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/tvhbase
            Tags: latest

  build-tvhbase-stable:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'stable'
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/tvhbase:stable
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/tvhbase
            Tags: stable

  build-tvhbase-ubuntu:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'ubuntu'
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/tvhbase:ubuntu
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/tvhbase
            Tags: ubuntu

  build-tvheadend-latest:
    needs: build-tvhbase-latest
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    env:
      IMAGE_FROM: wiserain/tvhbase:latest
      IMAGE_TAG: latest
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          CID=$(docker run -d $IMAGE_FROM)
          BUILD=$(docker exec $CID tvheadend -v | awk -F'[_ ]' '{print $NF}' | awk -F'[_~]' '{print $1}')
          docker rm -f $CID
          echo ::set-output name=tvh_build::${BUILD}
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.IMAGE_TAG }}, ${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}

  build-tvheadend-stable:
    needs: build-tvhbase-stable
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    env:
      IMAGE_FROM: wiserain/tvhbase:stable
      IMAGE_TAG: stable
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          CID=$(docker run -d $IMAGE_FROM)
          BUILD=$(docker exec $CID tvheadend -v | awk -F'[_ ]' '{print $NF}' | awk -F'[_~]' '{print $1}')
          docker rm -f $CID
          echo ::set-output name=tvh_build::${BUILD}
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.IMAGE_TAG }}, ${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}

  build-tvheadend-ubuntu:
    needs: build-tvhbase-ubuntu
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    env:
      IMAGE_FROM: wiserain/tvhbase:ubuntu
      IMAGE_TAG: ubuntu
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          CID=$(docker run -d $IMAGE_FROM)
          BUILD=$(docker exec $CID tvheadend -v | awk -F'[_ ]' '{print $NF}' | awk -F'[_~]' '{print $1}')
          docker rm -f $CID
          echo ::set-output name=tvh_build::${BUILD}
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.ubuntu
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.IMAGE_TAG }}, ${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}

  build-tvheadend-latest-ns:
    needs:
      - build-tvhbase-latest
      - build-tvhbase-stable
      - build-tvhbase-ubuntu
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    env:
      IMAGE_FROM: ghcr.io/linuxserver/tvheadend:latest
      IMAGE_TAG: latest-ns
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          CID=$(docker run -d $IMAGE_FROM)
          BUILD=$(docker exec $CID tvheadend -v | awk -F'[_ ]' '{print $NF}' | awk -F'[_~]' '{print $1}')
          docker rm -f $CID
          echo ::set-output name=tvh_build::${BUILD}
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.IMAGE_TAG }}, ${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}

  build-tvheadend-stable-ns:
    needs:
      - build-tvhbase-latest
      - build-tvhbase-stable
      - build-tvhbase-ubuntu
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    env:
      IMAGE_FROM: ghcr.io/linuxserver/tvheadend:release-4.2
      IMAGE_TAG: stable-ns
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          CID=$(docker run -d $IMAGE_FROM)
          BUILD=$(docker exec $CID tvheadend -v | awk -F'[_ ]' '{print $NF}' | awk -F'[_~]' '{print $1}')
          docker rm -f $CID
          echo ::set-output name=tvh_build::${BUILD}
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}
          build-args: |
            BASE_IMAGE=${{ env.IMAGE_FROM }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.IMAGE_TAG }}, ${{ env.IMAGE_TAG }}-${{ steps.vars.outputs.tvh_build }}

  pushrm:
    needs:
      - build-tvheadend-latest
      - build-tvheadend-stable
      - build-tvheadend-ubuntu
      - build-tvheadend-latest-ns
      - build-tvheadend-stable-ns
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=github_desc::$(curl -sX GET https://api.github.com/repos/${GITHUB_REPOSITORY} | jq -r .description)
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Update Dockerhub description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
          repository: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          short-description: ${{ steps.vars.outputs.github_desc }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
